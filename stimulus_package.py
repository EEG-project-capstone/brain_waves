##Jacob Cavon, Anika Gupta, Arielle Hancko, Roni Weissman, 2024##
##Stimulus package for EEG patients##

# Import packages
from gtts import gTTS
import os
from psychopy import core, sound, visual
from psychopy.sound import Sound
import psychtoolbox as ptb
import random
import time

#######
# Define and generate lists of words
#######

def generate_and_play_sentences(num_sentences=4, patient_id="patient123"):
    # Define lists of words (modify these with your desired words, could even modify this function to take in lists     # of words as arguments)
    noun_list = ["Arielle", "Anika", "Jacob", "Roni"]
    adj_list = ["tired", "awake", "happy", "sad"]
    verb_list = ["waves", "cries", "stands", "lies"]
    
    # Initialize an empty dictionary
    administered_sentences_dict = {}

    sentence_count = 0

    while sentence_count < num_sentences:
        # Generate random sentence, date, and timestamp
        noun = random.choice(noun_list)
        adj = random.choice(adj_list)
        verb = random.choice(verb_list)
        sentence = f"{noun} is {adj} and {verb}"

        # Capture sentence timestamp and update dictionary with administered sentence
        current_timestamp = time.time()
        administered_sentences_dict[current_timestamp] = sentence

        # initialize the google text to speech object
        tts = gTTS(text=sentence, lang="en")
        tts.save("temp.mp3")

        # Play audio
        sentence_sound = sound.Sound("temp.mp3")
        now = ptb.GetSecs()
        Sound.play(sentence_sound, when=now)
        print(sentence)
        
        # Wait for 5 seconds before looping again
        core.wait(5)

        # Increment the sentence count
        sentence_count += 1
        
        # delete the intermediate mp3 file
        os.remove("temp.mp3")


    # Return patient ID, current date, and the updated dictionary
    return patient_id, administered_sentences_dict

#######
# Update global patient dictionary
#######

def update_patient_dict(patient_id, administered_sentences_dict):
    """
    Updates the global patient dictionary with strings of the sentences generated by the generate_and_play_sentences() function.
    Each sentence string value is paired with a global timestamp key of when the sentence audio was played.

    Parameters:
    - patient_id (str)
    - administered sentences_dict (dict): The timestamped sentences dictionary returned by generate_and_play_sentences() function.

    Returns:
    Updates the global patient_dict with the Python current date and the timestamped sentences administered from generate_and_play_sentences()
    """
    current_date = time.strftime("%Y-%m-%d")

    # Check if patient_id is already in the dictionary
    if patient_id not in patient_dict:
        patient_dict[patient_id] = {}

    # Check if current_date is already in the inner dictionary
    if current_date not in patient_dict[patient_id]:
        patient_dict[patient_id][current_date] = {}
    else:
        print("Patient has already been administered stimulus protocol today")
        return
    
    # Update the global patient dictionary with sentences_dict
    patient_dict[patient_id][current_date].update(administered_sentences_dict)